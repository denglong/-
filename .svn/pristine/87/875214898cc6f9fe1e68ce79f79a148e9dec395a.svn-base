//
//  ConfirmOrderController.m
//  KingProFrame
//
//  Created by JinLiang on 15/8/17.
//  Copyright (c) 2015年 king. All rights reserved.
//

#import "ConfirmOrderController.h"
#import "ConfirmOrderCell.h"
#import "OrderMoneyCell.h"
#import "OrderDetailGoodsCell.h"
#import "confirmGoodsCell.h"
#import "MyAddressViewController.h"
#import "CoupViewController.h"
#import "NewAddressViewController.h"
#import "ConfirmHeaderCell.h"
#import "TabBarController.h"
#import "DistributionWayController.h"
#import "goodsModel.h"
#import "OrderDetailViewController.h"
#import "distributionInfoView.h"

@interface ConfirmOrderController ()<PassTrendValueDelegate, CoupDelegate, UITextFieldDelegate, newAddressDelegate, ChooseDistributionDelegate>
{
    NSString *address;               /**<收货地址*/
    NSString *addressUser;          /**<收货人*/
    NSString *addressTel;           /**<收货电话*/
    NSArray *couponList;            /**<可用优惠券列表*/
    NSArray *cantCouponList;       /**<不可用优惠券*/
    NSArray *goodsList;             /**<商品列表*/
    NSString *expressPrice;        /**<配送费*/
    NSString *orderPrice;           /**<应付金额*/
    NSString *couponName;           /**优惠券名称*/
    NSString *couponFee;            /**<优惠金额*/
    NSString *shippingStartTime;  /**<预约开始时间*/
    NSString *shippingEndTime;    /**<预约结束时间*/
    NSInteger indexNum;             /**配送选择判断，1表示即时配送，0表示预约配送*/
    NSString *chonseTime;          /**<选择的预约配货时间*/
    NSMutableArray *allTime;      /**<预约配货事件列表*/
    NSInteger coupNum;             /**<判断是否跳转选择了优惠券，1表示是*/
    NSString *shippingType;        /**<配送类型1.立即配送，2.预约配送*/
    NSString *myCoupId;             /**<默认优惠券id*/
    NSInteger height;               /**<键盘高度*/
    UITextField *myField;          /**<添加备注输入框*/
    NSString *myAddressId;         /**<地址id*/
    NSString *expressDes;          /**<配送费*/
    NSInteger sumNum;              /**<商品总件数*/
    float     allPrice;            /**<商品总价*/
    NSString *distributionStr;     /**<配送方式*/
    NSString *shippingTime ;//  选择预约配送时间
    NSArray *confirmGoods;
    distributionInfoView *distView;
    NSString *addId;
}

@end

@implementation ConfirmOrderController
@synthesize orderInfoDic, submitBtn, myTableView, totleNum, totlePrice, alertBgView, myAlertView, myAlertTableView;

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title=@"订单确认";
    _cloudClient=[CloudClient getInstance];
    DLog(@"订单信息----------->%@",self.orderInfoDic);
    
    [[CommClass sharedCommon] localObject:[self.orderInfoDic objectForKey:@"lat"]  forKey:AddressLat];
    [[CommClass sharedCommon] localObject:[self.orderInfoDic objectForKey:@"lng"] forKey:AddressLng];
    
//    submitBtn.layer.cornerRadius = 4;
    alertBgView.hidden = YES;
    myAlertView.layer.cornerRadius = 6;
    myAlertTableView.layer.cornerRadius = 6;
    if (self.secKill == NO && self.presell == NO) {
        [self createViewData];
    }
    
    distributionStr = @"送货上门";
    
    shippingType = @"1";
    
    //键盘打开
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWasShown:) name:UIKeyboardWillShowNotification object:nil];
    //监听键盘收起
    [[NSNotificationCenter defaultCenter]  addObserver:self selector:@selector(keyboardWasHidden:) name:UIKeyboardWillHideNotification object:nil];
    
    if (self.secKill == YES && [UserLoginModel isLogged]) {
        [self getSecKillOrderDataReq:self.goodId];
    }
    
    if (self.presell == YES && [UserLoginModel isLogged]) {
        [self getPresellOrderDataReq:self.goodId andNumber:self.goodNum andCoupId:@"0"];
    }
    
    [self createDistViewAction];
}

#pragma mark - 创建配送信息View
- (void)createDistViewAction {
    
    distView = [[NSBundle mainBundle] loadNibNamed:@"distributionInfoView" owner:self options:nil].lastObject;
    [distView addWindowAction];
}

- (void)createViewData {
    couponList = [orderInfoDic objectForKey:@"couponList"];
    cantCouponList = [orderInfoDic objectForKey:@"cantCouponList"];
    goodsList = [orderInfoDic objectForKey:@"goodsList"];
    expressPrice = [NSString stringWithFormat:@"￥%.2f", [[orderInfoDic objectForKey:@"expressPrice"] floatValue]];
    orderPrice = [NSString stringWithFormat:@"%@", [orderInfoDic objectForKey:@"realPrice"]];
    shippingStartTime = [NSString stringWithFormat:@"%@", [orderInfoDic objectForKey:@"shippingStartTime"]];
    shippingEndTime = [NSString stringWithFormat:@"%@", [orderInfoDic objectForKey:@"shippingEndTime"]];
    sumNum = 0;
    allPrice = 0;
    for (NSDictionary *dic in goodsList) {
        NSInteger num = [[dic objectForKey:@"cartGoodsNumber"] integerValue];
        float price = [[dic objectForKey:@"goodsPrice"] floatValue];
        allPrice += num * price;
        sumNum += num;
    }
    
    confirmGoods = [goodsModel mj_keyValuesArrayWithObjectArray:goodsList];
    
    float vipP = allPrice-[orderPrice floatValue];
    if (vipP < 0) {
        vipP = 0;
    }
    self.vipPrice.text = [NSString stringWithFormat:@"会员省：￥%.2f", vipP];
    totlePrice.text = [NSString stringWithFormat:@"待支付￥%.2f", [orderPrice floatValue]];
    totleNum.text = [NSString stringWithFormat:@"%ld件", (long)sumNum];
    
    myAddressId = [NSString stringWithFormat:@"%@", [orderInfoDic[@"membersAddress"] objectForKey:@"id"]];
    if (coupNum != 1 && myAddressId) {
        address = [NSString stringWithFormat:@"%@%@", [orderInfoDic[@"membersAddress"] objectForKey:@"address"], [orderInfoDic[@"membersAddress"] objectForKey:@"addressDetail"]];
        addressUser = [orderInfoDic[@"membersAddress"] objectForKey:@"addressName"];
        addressTel = [NSString stringWithFormat:@"%@", [orderInfoDic[@"membersAddress"] objectForKey:@"addressMobile"]];
        
        myAddressId = [NSString stringWithFormat:@"%@", [orderInfoDic[@"membersAddress"] objectForKey:@"id"]];
        
        if ([DataCheck isValidArray:couponList]) {
            
            for (NSDictionary *dic in couponList) {
                NSString *isDefault = [dic objectForKey:@"isDefault"];
                if ([isDefault integerValue] == 1) {
                    float price = [[dic objectForKey:@"price"] floatValue];
                    if (price == 0) {
                        couponFee = @"";
                    }
                    else
                    {
                        couponFee = [NSString stringWithFormat:@"-￥%.2f", [[dic objectForKey:@"price"] floatValue]];
                    }
                    myCoupId = [NSString stringWithFormat:@"%@", [dic objectForKey:@"id"]];
                    couponName = [NSString stringWithFormat:@"%@", [dic objectForKey:@"couponName"]];
                    if (couponName && [DataCheck isValidString:couponName]) {
                        couponName = [NSString stringWithFormat:@"(%@)", couponName];
                    }
                }
            }
        }
        else {
            couponName = @"";
            myCoupId=@"";
        }
        
    }
    
    expressDes = [orderInfoDic objectForKey:@"expressDes"];
    if (expressDes && [DataCheck isValidString:expressDes]) {
        expressDes = [NSString stringWithFormat:@"(%@)", expressDes];
    }
    else
    {
        expressDes = @"";
    }
    
    allTime = [NSMutableArray array];
    long long time = [shippingStartTime longLongValue];
    [allTime addObject:shippingStartTime];
    while (time < [shippingEndTime longLongValue]) {
        time = time + 900000;
        [allTime addObject:[NSString stringWithFormat:@"%lld", time]];
    }
}

//选择地址后代理
-(void)passTrendValues:(NSDictionary *)values andAddressId:(NSString *)addressId {
    address = [values objectForKey:@"address"];
    addressUser = [values objectForKey:@"addressUser"];
    addressTel = [values objectForKey:@"addressTel"];
    
    myAddressId = addressId;
    
    [myTableView reloadData];
}

//新增地址后代理
- (void)newAddress:(NSDictionary *)values andAddressId:(NSString *)addressId {
    address = [values objectForKey:@"address"];
    addressUser = [values objectForKey:@"addressUser"];
    addressTel = [values objectForKey:@"addressTel"];
    
    myAddressId = addressId;
    if (address) {
        [myTableView reloadData];
    }
}

//选择优惠券后代理
- (void)coupValue:(NSString *)price andCoupId:(NSString *)coupId andCoupName:(NSString *)coupName{
    coupNum = 1;
    myCoupId = coupId;
    if (self.presell == YES) {
        [self getPresellOrderDataReq:self.goodId andNumber:self.goodNum andCoupId:coupId];
    }
    else
    {
        [self getMyOrderDataReq:coupId];
    }
    
    if ([coupId integerValue] < 0 || [price floatValue] == 0.0) {
        couponFee = @"";
    }
    else
    {
        couponFee = [NSString stringWithFormat:@"-￥%.2f", [price floatValue]];
    }
    if ([DataCheck isValidString:coupName]) {
        couponName = [NSString stringWithFormat:@"(%@)", coupName];
    }
    else
    {
        couponName = @"";
    }
    
    [myTableView reloadData];
}

/**
 * Method name: sizeWithString
 * Description: 根据label内容计算label高度
 * Parameter: label内容
 * Parameter: label字体大小
 */
- (CGSize)sizeWithString:(NSString *)string font:(UIFont *)font
{
    CGRect rect;
    if ([[UIScreen mainScreen] bounds].size.width > 320) {
        rect = [string boundingRectWithSize:CGSizeMake(viewWidth - 150, 8000)//限制最大的宽度和高度
                                    options:NSStringDrawingTruncatesLastVisibleLine | NSStringDrawingUsesFontLeading  |NSStringDrawingUsesLineFragmentOrigin//采用换行模式
                                 attributes:@{NSFontAttributeName: font}//传入的字体字典
                                    context:nil];
    }
    else
    {
        rect = [string boundingRectWithSize:CGSizeMake(viewWidth - 150, 8000)//限制最大的宽度和高度
                                    options:NSStringDrawingTruncatesLastVisibleLine | NSStringDrawingUsesFontLeading  |NSStringDrawingUsesLineFragmentOrigin//采用换行模式
                                 attributes:@{NSFontAttributeName: font}//传入的字体字典
                                    context:nil];
    }
    
    
    return rect.size;
}

/**
 * Method name: tableView
 * Description: tableView相关实现方法
 * Parameter: 无
 
 * Parameter: 无
 */
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    if (tableView.tag == 0) {
        return  4;
    }
    else
    {
        return 1;
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    if (tableView.tag == 0) {
        switch (section) {
            case 0:
                return 1;
                break;
            case 1:
                return goodsList.count + 1;
                break;
            case 2:
                return 2;
                break;
            case 3:
                return 2;
                break;
            case 4:
                return 1;
                break;
            default:
                return 0;
                break;
        }
    }
    else
    {
        return allTime.count;
    }
    
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"Cell";
    
    ConfirmOrderCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        NSArray *views = [[NSBundle mainBundle] loadNibNamed:@"ConfirmOrderCell" owner:self options:nil];
        cell = [views objectAtIndex:0];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    if (tableView.tag == 0) {
        switch (indexPath.section) {
            case 0:
            {
                if (indexPath.row == 0) {
                    if (addressUser != nil && ![addressUser isEqual:[NSNull null]]) {
                        ConfirmHeaderCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
                        if (cell == nil) {
                            NSArray *views = [[NSBundle mainBundle] loadNibNamed:@"ConfirmHeaderCell" owner:self options:nil];
                            cell = [views objectAtIndex:0];
                        }
                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                        
                        cell.name.text = addressUser;
                        cell.phoneNum.text = addressTel;
                        
                        cell.myAddress.numberOfLines = 0;
                        cell.myAddress.text = address;
                        
                        CGSize size =  [self sizeWithString:cell.myAddress.text font:cell.myAddress.font];
                        cell.myAddress.frame = CGRectMake(47, cell.myAddress.frame.origin.y, cell.frame.size.width - 67, size.height);
                        
                        cell.frame = CGRectMake(cell.frame.origin.x, cell.frame.origin.y, cell.frame.size.width, cell.myAddress.frame.size.height + cell.frame.size.height - 13);
                        cell.downLine.frame = CGRectMake(0, cell.frame.size.height - 1, cell.downLine.frame.size.width, 1);
                        
                        return cell;
                    }
                    else
                    {
                        cell.bgView.hidden = YES;
                        cell.addIcon.hidden = NO;
                        cell.address.hidden = NO;
                    }
                }
                else
                {
                    
                    
                    if (self.presell == NO) {
                        cell.goodsNum.hidden = YES;
                        cell.goodsPrice.hidden = YES;
                        cell.goodsName.text = distributionStr;
                        cell.rightArrows.hidden = NO;
                    }
                    else
                    {
                        cell.goodsNum.hidden = YES;
                        cell.goodsPrice.hidden = YES;
                        cell.goodsName.text = [orderInfoDic objectForKey:@"shippingText"];
                        cell.rightArrows.hidden = YES;
                    }
                }
            }
                break;
            case 1:
            {
                if (indexPath.row == 0) {
                    cell.greenImg.hidden = NO;
                    cell.goodsName.transform = CGAffineTransformMakeTranslation(0, 0);
                    cell.goodsNum.hidden = YES;
                    cell.goodsName.text = @"购物清单";
                    cell.goodsPrice.text = [NSString stringWithFormat:@"共计%ld件", (long)sumNum];
                }
                else
                {
                    confirmGoodsCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
                    if (cell == nil) {
                        NSArray *views = [[NSBundle mainBundle] loadNibNamed:@"confirmGoodsCell" owner:self options:nil];
                        cell = [views objectAtIndex:0];
                        cell.selectionStyle = UITableViewCellStyleDefault;
                    }
                    
                    if (goodsList.count > 0) {
                        NSDictionary *orderDic = goodsList[indexPath.row - 1];
                        NSURL * url = [NSURL URLWithString:[orderDic objectForKey:@"goodsPic"]];
                        [cell.goodsImage setImageWithURL:url placeholderImage:UIIMAGE(@"orderShopHeader")];
                        cell.goodsNameLabel.text = [NSString stringWithFormat:@"%@", [orderDic objectForKey:@"goodsName"]];
                        cell.goodsPriceLabel.text = [NSString stringWithFormat:@"￥%.2f", [[orderDic objectForKey:@"goodsPrice"] floatValue]];
                        cell.goodsCountLabel.text = [NSString stringWithFormat:@"x%@", [orderDic objectForKey:@"cartGoodsNumber"]];
                    }
                    
                    CGSize size =  [self sizeWithString:cell.goodsNameLabel.text font:cell.goodsNameLabel.font];
                    cell.goodsNameLabel.frame = CGRectMake(cell.goodsNameLabel.frame.origin.x, 18, size.width, size.height);
                   
                    if(cell.goodsNameLabel.frame.size.height+8 > cell.goodsImage.frame.size.height){
                        cell.frame = CGRectMake(0, 0, cell.frame.size.width, 18+size.height+18);
                    }

                    if (goodsList.count > 0) {
                        NSDictionary *orderDic = goodsList[indexPath.row - 1];
                        if ([DataCheck isValidArray:[orderDic objectForKey:@"groupDetail"]]) {
                            cell.groupGoods = [orderDic objectForKey:@"groupDetail"];
                        }
                    }
                    
                    return cell;
                }
            }
                break;
            case 2:
            {
                cell.goodsNum.hidden = YES;
                cell.goodsPrice.hidden = YES;
                
                if (indexPath.row == 0) {
                    cell.rightArrows.hidden = NO;
                    if (addId) {
                        cell.goodsName.text = @"到店自提";
                    }
                    else
                    {
                        cell.goodsName.text = @"送货上门";
                    }
                }
                else
                {
                    cell.rightArrows.hidden = YES;
                    cell.goodsPrice.hidden = NO;
//                    if (!couponName) {
//                        couponName = @"";
//                    }
//                    NSMutableAttributedString *mutaString =
//                    [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"优惠券%@", couponName]];
//                    [mutaString addAttribute:NSForegroundColorAttributeName value:[UIColor_HEX colorWithHexString:@"#EB6F67"] range:NSMakeRange(5, couponName.length)];
//                    
//                    cell.goodsName.attributedText = mutaString;
                    cell.goodsName.text = @"会员优惠";
                    if ([[MyInfoModel sharedInstance].userType integerValue] == 1) {
                        cell.goodsPrice.text = @"会员";
                    }
                    else
                    {
                        cell.goodsPrice.text = @"非会员";
                    }
                }
            }
                break;
            case 3:
            {
                if (indexPath.row == 0)
                {
                    OrderMoneyCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
                    if (cell == nil) {
                        NSArray *views = [[NSBundle mainBundle] loadNibNamed:@"OrderMoneyCell" owner:self options:nil];
                        cell = [views objectAtIndex:0];
                    }
                    cell.selectionStyle = UITableViewCellSelectionStyleNone;
                    
                    cell.allTotle.text = [NSString stringWithFormat:@"¥%.2f", allPrice];
                    if ([DataCheck isValidString: expressPrice]) {
                        cell.glucoside.text = expressPrice;
                    }
                    else
                    {
                        cell.glucoside.text = @"¥0.00";
                    }
                    
//                    if ([DataCheck isValidString:couponFee]) {
//                        cell.coupon.text = [NSString stringWithFormat:@"%@", couponFee];
//                    }
//                    else
//                    {
//                        cell.coupon.text = @"-¥0.00";
//                    }
                    
                    float vipP = allPrice-[orderPrice floatValue];
                    if (vipP < 0) {
                        vipP = 0;
                    }
                    cell.coupon.text = [NSString stringWithFormat:@"-￥%.2f", vipP];
                    
                    cell.allMoney.text = [NSString stringWithFormat:@"￥%.2f", [orderPrice floatValue]];
                    
                    return cell;
                }
                else
                {
                    cell.goodsPrice.text = [NSString stringWithFormat:@"合计：￥%.2f", [orderPrice floatValue]];
                    cell.goodsPrice.textColor = [UIColor_HEX colorWithHexString:@"FF724D"];
                }
            }
                break;
            default:
                break;
        }
    }
    else
    {
        cell.selectionStyle = UITableViewCellSelectionStyleDefault;
        
        cell.bgView.hidden = YES;
        
        UILabel *timelab = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, viewWidth - 40, cell.frame.size.height)];
        timelab.font = [UIFont systemFontOfSize:14];
        timelab.textColor = [UIColor blackColor];
        timelab.textAlignment = NSTextAlignmentCenter;
        
        NSString *time = [allTime[indexPath.row] substringToIndex:10];
        
        timelab.text =  [self formatTimeStamp:time timeFormat:@"YYYY-MM-dd HH:mm"];
        [cell.contentView addSubview:timelab];
        
    }
    
    return cell;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell =[self tableView:tableView cellForRowAtIndexPath:indexPath];
    return cell.frame.size.height ;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (tableView.tag == 0) {
        return 10;
    }
    else
    {
        return 0;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    
    UIView *footView           = [[UIView alloc] initWithFrame:CGRectMake(0, 0, tableView.frame.size.width, 10)];
    footView.backgroundColor = [UIColor clearColor];
    
    return footView;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (tableView.tag == 0) {
        UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
        [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
        self.hidesBottomBarWhenPushed = YES;
        if (indexPath.section == 0) {
            
            if (indexPath.row == 0) {
                if (address && [DataCheck isValidString:address]) {
                    MyAddressViewController *myAddress = [[MyAddressViewController alloc] init];
                    myAddress.selectedID = myAddressId;
                    myAddress.trendDelegate = self;
                    myAddress.delegate = self;
                    if (self.secKill == NO && self.presell == NO) {
                        myAddress.confirmPage = 1;
                    }else
                    {
                        myAddress.confirmPage = 3;
                    }
                    [self.navigationController pushViewController:myAddress animated:YES];
                }
                else
                {
                    NewAddressViewController *newAddress = [[NewAddressViewController alloc] init];
                    newAddress.addressDelegate = self;
                    if (self.secKill == NO && self.presell == NO) {
                        newAddress.confirmPage = 1;
                    }else
                    {
                        newAddress.confirmPage = 3;
                    }
                    
                    newAddress.type = @"1";
                    [self.navigationController pushViewController:newAddress animated:YES];
                }
            }
        }
        
        if (indexPath.section == 2 && indexPath.row == 0) {
            
//            {
//                DLog(@"配送方式");
//                if (self.presell == YES) {
//                    return;
//                }
//                DistributionWayController *distributionWay = [[DistributionWayController alloc] init];
//                distributionWay.chooseTimes = allTime;
//                if ([distributionStr isEqualToString:@"即时配送"]) {
//                    distributionWay.isImmediately = YES;
//                }
//                distributionWay.delegate = self;
//                [self.navigationController pushViewController:distributionWay animated:YES];
//            }
            [self chooseWayAction:nil];
        }
        
//        if (indexPath.section == 2 && indexPath.row == 1) {
//            CoupViewController *coupView = [[CoupViewController alloc] init];
//            coupView.myCoupDelegate = self;
//            coupView.lists = couponList;
//            coupView.cantLists = cantCouponList;
//            coupView.coupId = myCoupId;
//            [self.navigationController pushViewController:coupView animated:YES];
//        }
    }
}

#pragma mark - 选择配送方式
- (void)chooseWayAction:(UIButton *)sender {
    
//    if (sender.tag == 1) {
//        
//        shippingType = @"2";
//        sender.selected = YES;
//        alertBgView.hidden = NO;
//        indexNum = 1;
//        [myAlertTableView reloadData];
//    }
//    else
//    {
//        shippingType = @"1";
//        sender.selected = YES;
//        indexNum = 0;
//        chonseTime = nil;
//    }
//    [myTableView reloadData];
    [distView showDistributionInfoView:self.orderInfoDic[@"shopAddress"] black:^(NSString *selectId) {
        NSLog(@"%@", selectId);
        if (selectId) {
            addId = selectId;
        }
        else
        {
            addId = nil;
        }
        [myTableView reloadData];
    }];
}

#pragma mark - 点击取消或确认处理事件
- (IBAction)canaleOrOkAction:(UIButton *)sender {
    if (sender.tag == 0) {
        indexNum = 0;
        chonseTime = nil;
        shippingType = @"1";
    }
    else
    {
        if (!chonseTime) {
            indexNum = 0;
            shippingType = @"1";
        }
        else
        {
            shippingType = @"2";
        }
    }
    
    alertBgView.hidden = YES;
    [myTableView reloadData];
}

- (void) keyboardWasShown:(NSNotification *) notification
{
    //获取键盘的高度
    NSDictionary *userInfo = [notification userInfo];
    NSValue *aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey];
    CGRect keyboardRect = [aValue CGRectValue];
    height = keyboardRect.size.height;
    NSInteger keyboardY = keyboardRect.origin.y;
    
    myTableView.frame = CGRectMake(myTableView.frame.origin.x, myTableView.frame.origin.y, myTableView.frame.size.width, keyboardY - 75);
}

- (void) keyboardWasHidden:(NSNotification *)notification {
    myTableView.frame = CGRectMake(myTableView.frame.origin.x, myTableView.frame.origin.y, myTableView.frame.size.width, myTableView.frame.size.height + height - 45);
}

#pragma mark - 滑动隐藏键盘
- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView {
    [myField resignFirstResponder];
}

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField {
    myField = textField;
    
    return YES;
}

- (void)textFieldDidEndEditing:(UITextField *)textField {
    myField = textField;
}

#pragma mark -  秒杀商品结算接口
-(void)getSecKillOrderDataReq:(NSString *)goodId{
    [self showHUD];
    
    NSDictionary *params = @{@"goodsId":goodId};
    
    [_cloudClient requestMethodWithMod:@"order/seckill"
                                params:nil
                            postParams:params
                              delegate:self
                              selector:@selector(getSecKillDataSuccess:)
                         errorSelector:@selector(getSecKillDataFail:)
                      progressSelector:nil];
}

-(void)getSecKillDataSuccess:(NSDictionary*)response{
    if ([DataCheck isValidDictionary:response]) {
        orderInfoDic = [[NSDictionary alloc]initWithDictionary:response];
        [self createViewData];
        [myTableView reloadData];
        
        [[CommClass sharedCommon] localObject:[orderInfoDic objectForKey:@"lat"]  forKey:AddressLat];
        [[CommClass sharedCommon] localObject:[orderInfoDic objectForKey:@"lng"] forKey:AddressLng];
    }
    [self hidenHUD];
}

-(void)getSecKillDataFail:(NSDictionary*)response{
    
    [self hidenHUD];
    if (self.secKill == YES) {
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
            [self.navigationController popViewControllerAnimated:YES];
        });
    }
}

#pragma mark -  无现货商品结算接口
-(void)getPresellOrderDataReq:(NSString *)goodId andNumber:(NSString *)number andCoupId:(NSString *)coupId{
    [self showHUD];
    
    NSDictionary *params = @{@"goodsId":goodId, @"goodsNumber":number, @"couponId":coupId};
    
    [_cloudClient requestMethodWithMod:@"order/preSell"
                                params:nil
                            postParams:params
                              delegate:self
                              selector:@selector(getPresellDataSuccess:)
                         errorSelector:@selector(getPresellDataFail:)
                      progressSelector:nil];
}

-(void)getPresellDataSuccess:(NSDictionary*)response{
    if ([DataCheck isValidDictionary:response]) {
        orderInfoDic = [[NSDictionary alloc]initWithDictionary:response];
        [self createViewData];
        [myTableView reloadData];
        
        [[CommClass sharedCommon] localObject:[orderInfoDic objectForKey:@"lat"]  forKey:AddressLat];
        [[CommClass sharedCommon] localObject:[orderInfoDic objectForKey:@"lng"] forKey:AddressLng];
    }
    [self hidenHUD];
}

-(void)getPresellDataFail:(NSDictionary*)response{
    [self hidenHUD];
    if (self.presell == YES) {
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
            [self.navigationController popViewControllerAnimated:YES];
        });
    }
}

#pragma mark - 获取结算页面数据处理事件
-(void)getMyOrderDataReq:(NSString *)coupId{
    [self showHUD];
    
    ShoppingCartModel *cartModel=[ShoppingCartModel shareModel];
    
    NSDictionary *params = @{@"goodsList":goodsList, @"totalPrice":cartModel.goodsPrice, @"couponId":coupId};
    
    [_cloudClient requestMethodWithMod:@"order/flow"
                                params:nil
                            postParams:params
                              delegate:self
                              selector:@selector(getMyOrderDataSuccess:)
                         errorSelector:@selector(getMyOrderDataFail:)
                      progressSelector:nil];
}

-(void)getMyOrderDataSuccess:(NSDictionary*)response{
    if ([DataCheck isValidDictionary:response]) {
        orderInfoDic = [[NSDictionary alloc]initWithDictionary:response];
        [self createViewData];
        [myTableView reloadData];
    }
    [self hidenHUD];
}

-(void)getMyOrderDataFail:(NSDictionary*)response{
    
    [self hidenHUD];
}

#pragma mark - 提交订单处理事件
-(IBAction)submitOrders:(id)sender{
    
    
    if ([shippingType integerValue] == 1) {
        shippingTime = @"";
    
    }
    
    NSString *remark = myField.text;
    if (remark.length > 255) {
        [SRMessage infoMessage:@"备注输入不能超过255个字" delegate:self];
        return;
    }
    if (![DataCheck isValidString:remark]) {
        remark = @"";
    }
    
    NSString *myId = [NSString stringWithFormat:@"%@", myAddressId];
    if ([myId integerValue] == 0 || ![DataCheck isValidString:myId]) {
        [SRMessage infoMessage:@"请选择地址" delegate:self];
        return;
    }
    
    if (![DataCheck isValidString:myCoupId]) {
        myCoupId=@"";
    }
    
    [self showHUD];
    
    NSString * orderP = [NSString stringWithFormat:@"%@",[orderInfoDic objectForKey:@"orderPrice"]];
    NSString * shippingF = [NSString stringWithFormat:@"%@",[orderInfoDic objectForKey:@"expressPrice"]];
    
    if (!addId) {

        shippingType = @"1";
    }
    else
    {
        shippingType = @"2";
    }
    
    NSDictionary *paramsDic = nil;
    if (self.secKill == YES || self.presell == YES) {
        NSString *type = nil;
        if (self.secKill == YES) {
            type = @"1";
        }
        else
        {
            type = @"2";
        }
        
        if (![DataCheck isValidString:shippingTime]) {
            shippingTime = @"";
        }
        if (![DataCheck isValidString:self.again]) {
            self.again = @"0";
        }
        paramsDic=@{@"addressId":myAddressId,//收货地址 21:默认 龙记观澜山
                    @"couponId":myCoupId,//使用优惠券
                    @"shippingFee":shippingF,//配送费
                    @"shippingType":shippingType,//配送类型
                    @"shippingTime":shippingTime,//预约配送时间
                    @"remark":remark,//订单备注
                    @"orderAmount":orderP,//应付款金额
                    @"type":type,//秒杀预售标识
                    @"goodId":self.goodId,
                    @"goodsNumber":self.goodNum,
                    @"shopId":self.shopId,
                    @"again":self.again};
    }
    else
    {
        paramsDic=@{@"addressId":myAddressId,//收货地址 21:默认 龙记观澜山
                    @"couponId":myCoupId,//使用优惠券
                    @"shippingFee":shippingF,//配送费
                    @"shippingType":shippingType,//配送类型
                    @"shippingTime":shippingTime,//预约配送时间
                    @"remark":remark,//订单备注
                    @"orderAmount":orderP,
                    @"shopAddress":addId?addId:@""};//应付款金额
    }
    
    [_cloudClient requestMethodWithMod:@"order/buy"
                                params:nil
                            postParams:paramsDic
                              delegate:self
                              selector:@selector(submitSuccess:)
                         errorSelector:@selector(submitFail:)
                      progressSelector:nil];
    
}

-(void)submitSuccess:(NSDictionary*)response{
    
    if ([DataCheck isValidDictionary:response]) {
        [SRMessage infoMessage:@"提交订单成功" delegate:self];
        
        [NSTimer scheduledTimerWithTimeInterval:0.5 target:self selector:@selector(goApp:) userInfo:response repeats:NO];
        
//        NSNotification *notification = [NSNotification notificationWithName:NEWORDER_UPDATINFO
//                                                                     object:nil
//                                                                   userInfo:response];
//        
//        [[NSNotificationCenter defaultCenter] postNotification:notification];
    }
    
    [self hidenHUD];
}

-(void)goApp:(NSTimer *)timer
{
    NSDictionary * response = [timer userInfo];
    
    self.hidesBottomBarWhenPushed = YES;
    OrderDetailViewController *orderDetail = [[OrderDetailViewController alloc] init];
    orderDetail.orderNum = [response objectForKey:@"orderNo"];//订单号
    orderDetail.orderState = 1;
//    orderDetail.homePush = YES;
//    orderDetail.secKill = self.secKill;
//    orderDetail.presell = self.presell;
//    if ([DataCheck isValidArray:[response objectForKey:@"cartTotalList"]]) {
//        
//        NSArray *tmpCartArray=[response objectForKey:@"cartTotalList"];
//        NSDictionary *cartDic=[self formatSpecialArray:tmpCartArray];
//        
//        ShoppingCartModel *cartModel=[ShoppingCartModel shareModel];
//        
//        [cartModel updateShoppingCartInfo:cartDic];
//    }
    orderDetail.homePush = YES;
    [self.navigationController pushViewController:orderDetail animated:YES];
    
//    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
//        NSMutableArray *controllers = [self.navigationController.viewControllers mutableCopy];
//        [controllers removeObject:self];
//        self.navigationController.viewControllers = controllers;
//    });
//    self.hidesBottomBarWhenPushed = NO;
}

-(void)submitFail:(NSDictionary*)response{
    [self hidenHUD];
}

-(void)viewWillAppear:(BOOL)animated{
    
    [super viewWillAppear:animated];
    
    [self.navigationController setNavigationBarHidden:NO animated:animated];
    [MobClick beginLogPageView:NSStringFromClass([self class])];
    if (![UserLoginModel isLogged]) {
        [[AppModel sharedModel] presentLoginController:self];
        return;
    }
}

-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [MobClick endLogPageView:NSStringFromClass([self class])];
}

- (void)chooseDistributionAction:(NSString *)str {
    if ([str isEqualToString:@"送货上门"]) {
        distributionStr = str;
        shippingType = @"1";
    }
    else
    {
        shippingType = @"2";
        NSString *time = [self formatTimeStamp:[str substringToIndex:10] timeFormat:@"YYYY-MM-dd HH:mm"];
        distributionStr = time;
        shippingTime = str;
    }
    [myTableView reloadData];
}

@end
